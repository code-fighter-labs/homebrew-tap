# .github/workflows/release.yml
name: Release Migratrix Agent

on:
  push:
    tags:
      - 'agent-v*'  # Triggers on agent version tags like agent-v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
            ext: ""
            runtime: osx-x64
          - os: darwin
            arch: arm64
            ext: ""
            runtime: osx-arm64
          - os: linux
            arch: amd64
            ext: ""
            runtime: linux-x64
          - os: linux
            arch: arm64
            ext: ""
            runtime: linux-arm64
          - os: windows
            arch: amd64
            ext: ".exe"
            runtime: win-x64

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # Adjust to your .NET version

      - name: Restore dependencies
        run: dotnet restore src/Migratrix/Migratrix.Api.Agent

      - name: Build and publish
        run: |
          dotnet publish src/Migratrix/Migratrix.Api.Agent \
            --configuration Release \
            --runtime ${{ matrix.runtime }} \
            --self-contained true \
            --output ./dist/${{ matrix.runtime }} \
            -p:PublishSingleFile=true \
            -p:PublishTrimmed=true

      - name: Prepare artifacts
        run: |
          cd ./dist/${{ matrix.runtime }}
          
          # Rename the executable to migratrix-agent
          if [ "${{ matrix.os }}" = "windows" ]; then
            mv Migratrix.Api.Agent.exe migratrix-agent.exe
            zip ../../migratrix-agent-${{ matrix.os }}-${{ matrix.arch }}.zip migratrix-agent.exe
          else
            mv Migratrix.Api.Agent migratrix-agent
            chmod +x migratrix-agent
            tar -czf ../../migratrix-agent-${{ matrix.os }}-${{ matrix.arch }}.tar.gz migratrix-agent
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: migratrix-agent-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            migratrix-agent-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            migratrix-agent-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create install script
        run: |
          cat > install.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Detect OS and architecture
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m)
          
          case $ARCH in
            x86_64) ARCH="amd64" ;;
            arm64|aarch64) ARCH="arm64" ;;
            *) echo "Unsupported architecture: $ARCH" >&2; exit 1 ;;
          esac
          
          # Get latest release
          REPO="code-fighter-labs/migratrix"
          VERSION=$(curl -s "https://api.github.com/repos/$REPO/releases/latest" | grep '"tag_name":' | cut -d'"' -f4)
          
          echo "Installing Migratrix Agent $VERSION for $OS-$ARCH..."
          
          # Download and install
          if [ "$OS" = "windows" ]; then
            URL="https://github.com/$REPO/releases/download/$VERSION/migratrix-agent-$OS-$ARCH.zip"
            curl -L "$URL" -o migratrix-agent.zip
            unzip migratrix-agent.zip
            chmod +x migratrix-agent.exe
            echo "Downloaded migratrix-agent.exe"
          else
            URL="https://github.com/$REPO/releases/download/$VERSION/migratrix-agent-$OS-$ARCH.tar.gz"
            curl -L "$URL" -o migratrix-agent.tar.gz
            tar -xzf migratrix-agent.tar.gz
            chmod +x migratrix-agent
          
            # Try to install to PATH
            if [ -w "/usr/local/bin" ]; then
              mv migratrix-agent /usr/local/bin/
              echo "Installed to /usr/local/bin/migratrix-agent"
            else
              echo "Please move 'migratrix-agent' to a directory in your PATH"
            fi
          fi
          
          echo "Installation complete! Try: migratrix-agent --help"
          EOF
          chmod +x install.sh

      - name: Generate checksums
        run: |
          find . -name "*.tar.gz" -o -name "*.zip" | xargs sha256sum > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */migratrix-agent-*.tar.gz
            */migratrix-agent-*.zip
            install.sh
            checksums.txt
          generate_release_notes: true
          body: |
            ## Installation
            
            ### One-liner install (macOS/Linux):
            ```bash
            curl -sSL https://get.migratrix.com | sh
            ```
            
            ### Homebrew (macOS/Linux):
            ```bash
            brew tap code-fighter-labs/tap
            brew install migratrix-agent
            ```
            
            ### Docker:
            ```bash
            docker run --rm ghcr.io/code-fighter-labs/migratrix-agent:${{ github.ref_name }}
            ```
            
            ### Manual Download:
            Download the appropriate binary for your platform below.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}